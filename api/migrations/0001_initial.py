# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-16 10:42
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='BaseLayer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('srs', models.TextField()),
                ('params', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='BoundingBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('west', models.FloatField(default=0)),
                ('north', models.FloatField(default=0)),
                ('east', models.FloatField(default=0)),
                ('south', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_map_category', to='api.Category')),
            ],
        ),
        migrations.CreateModel(
            name='LayerInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('layer_id', models.TextField()),
                ('visible', models.BooleanField()),
                ('style', django.contrib.postgres.fields.jsonb.JSONField()),
                ('feature_view_options', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='LayerLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_index', models.IntegerField()),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_map_layer', to='api.LayerInfo')),
            ],
        ),
        migrations.CreateModel(
            name='MessageRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fr', models.TextField()),
                ('nl', models.TextField()),
                ('parameters', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('resource_identifier', models.CharField(max_length=1024)),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('revision', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('abstract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_abstract', to='api.MessageRecord')),
                ('bounding_box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BoundingBox')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('contact_name', models.TextField()),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='org_name', to='api.MessageRecord')),
            ],
        ),
        migrations.CreateModel(
            name='PointOfContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_of_contact', to='api.Organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResponsibleOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('md', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.MetaData')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=124)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='role', to='api.MessageRecord')),
            ],
        ),
        migrations.CreateModel(
            name='Thesaurus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uri', models.URLField()),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='thesaurus_name', to='api.MessageRecord')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=124)),
            ],
        ),
        migrations.CreateModel(
            name='UserMap',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('base_layer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.BaseLayer')),
                ('categories', models.ManyToManyField(through='api.CategoryLink', to='api.Category')),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='map_description', to='api.MessageRecord')),
                ('layers', models.ManyToManyField(through='api.LayerLink', to='api.LayerInfo')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='map_title', to='api.MessageRecord')),
                ('user', models.ForeignKey(default=0, editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='maps', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('topic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Topic')),
            ],
            bases=('api.topic',),
        ),
        migrations.AddField(
            model_name='topic',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='topic_name', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='topic',
            name='thesaurus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Thesaurus'),
        ),
        migrations.AddField(
            model_name='responsibleorganisation',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Role'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='point_of_contact',
            field=models.ManyToManyField(related_name='md_point_of_contact', to='api.PointOfContact'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='responsible_organisation',
            field=models.ManyToManyField(related_name='md_responsible_org', through='api.ResponsibleOrganisation', to='api.Organisation'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_title', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='topics',
            field=models.ManyToManyField(related_name='md_topic', to='api.Topic'),
        ),
        migrations.AddField(
            model_name='layerlink',
            name='user_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layer_user_map', to='api.UserMap'),
        ),
        migrations.AddField(
            model_name='layerinfo',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='layer_info_name', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='categorylink',
            name='user_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_user_map', to='api.UserMap'),
        ),
        migrations.AddField(
            model_name='category',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category_name', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='baselayer',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='base_layer_name', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='baselayer',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='base_layer_url', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attachment_name', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attachment_url', to='api.MessageRecord'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='user_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachment_user_map', to='api.UserMap'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='keywords',
            field=models.ManyToManyField(related_name='md_keyword', to='api.Keyword'),
        ),
    ]
